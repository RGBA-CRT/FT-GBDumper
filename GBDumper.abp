/* FT232HL GB Dumper
 * 	Programmed by RGBA_CRT 2018 09
 */

'AB-FT232HLib
#include "..¥D2XX.sbp"
#include "..¥MCP23017_Lib.sbp"
#include "..¥FT232HLib_debug.sbp"
'RGBALib
#include <RGBALib.sbp>
#include "GB_HardwareLevel.sbp"
#include "GB_SoftwareLevel.sbp"
#include "ROM_Class.sbp"
#console



Const FT_COMMAND_BUFFER_SIZE = 700*1024 
Main()


Sub Main()

	Print "FT232H-GB-DUMPER v0.4       RGBA_CRT 2018-2023"
	Print 
	Dim ft AS *FT232H

	ft=new FT232H(FT_COMMAND_BUFFER_SIZE)
	if ft->listupDeviceToConsole()=FALSE Then Input "[PRESS ENTER]",ft:End

	Dim ftID As DWord
	if ft->getNumberOfDevice() > 1 Then input "Select device >",ftID

	if ft->openDevice(ftID)=FALSE Then Print "OpenError" : End
	printf(ex"device #%02d online.¥n¥n",ftID)


	Dim fe AS *FT232H_DMGROM
	fe=New FT232H_DMGROM(ft)

	Dim c AS Long, filename AS String
	Do
		Dim header AS DMG_ROM_HEADER
		DMG_GetHeader(fe,VarPtr(header))
		Dump(VarPtr(header),sizeof(DMG_ROM_HEADER), DMG_HEADER_ADDRESS)

		Dim info AS DMG_ROM_INFO,infostr AS BytePtr
		DMG_rawHeaderToInfo(header,info)
		infostr=DMG_GenerateInfoText(info)
		printf(infostr)	: free(infostr) : infostr=NULL

		if info.bLogoCheck=FALSE Then
			colorPrint(PH_ERROR, ex"[Warning] 接触不良¥n")
		End If
			
		input ex"¥n1.Dump ROM  2.Dump SRAM  5.GBMemory Dump  6.Write SRAM¥n> ",c

		DMG_GetHeader(fe,VarPtr(header))
		DMG_rawHeaderToInfo(header,info)
		ft->flush()
	
		if c=1 or c=101 Then
			if c=101 then info.isNeedDeepRead = TRUE
			Dim savefilename AS BytePtr
			savefilename=MakeFileName(VarPtr(info),"",DMG_FILE_ROM)
			DumpFullRomToFile(fe,savefilename,info)
			free(savefilename) : savefilename=NULL
		Elseif c=2 Then
			savefilename=MakeFileName(VarPtr(info),"",DMG_FILE_SAVE)
			DumpSramToFile(fe,savefilename,info)
			free(savefilename) : savefilename=NULL
		Elseif c=6 Then
			Input "FileName(.sav) > ",filename
			WriteSramFromFile(fe,filename,info)
		else if c=5 Then			
			printf("GB Memory Setup: ")
			if GBMC_MapEntire(fe) = TRUE Then
				printf(ex"successful¥n")
			Else
				printf(ex"failed¥n")
			End If

			info.RomSize=1024*1024
			info.MBCType=DMG_GMMC1
			info.special = SPECIAL_DISABLE_CHECKSUM
			info.isNeedDeepRead = TRUE
			
			savefilename=MakeFileName(VarPtr(info),"",DMG_FILE_ROM)
			DumpFullRomToFile(fe,sprintfStr("%s.gb",info.Title),info)
			free(savefilename) : savefilename=NULL

		else if c=3 Then
			'MBC2 SRAM READ TEST
			ft->flush()
			fe->ROMEnable(FALSE)
			Dim buf[512] AS byte

			'sanniの謎修正　-> 効果なし
			FT232H_ReadEPROM(fe,buf,&H0134,4,TRUE)

			MBC_RamEnable(fe,DMG_MBC2,TRUE)
		
			fe->ROMEnable(TRUE)
			FT232H_ReadEPROM(fe,buf,&HA000,512,TRUE,TRUE)
			Dump(buf,512)
			fe->ROMEnable(TRUE)
			MBC_RamEnable(fe,DMG_MBC2,FALSE)
			fe->FT_SendCommands()
			
			DMG_MBC2_SRAM_4to8(buf)
			Dim test AS File 
			test.openFile("mbc2.sav",GENERIC_WRITE)
			test.write(buf,512)
			test.close() 

		Else if c=100 then
			' https://gbdev.gg8.se/forums/viewtopic.php?id=469
			ft->flush()
'			fe->ROMEnable(FALSE)
			fe->ROMEnable(TRUE)
			

			FT232H_ReadEPROM(fe,buf,&HA000,16,TRUE)
			Dump(buf,16)

			MBC_RegisterWrite(fe, &HA001, &H0A) 'TAMA5 unlock
'			fe->FT_SendCommands()

			FT232H_ReadEPROM(fe,buf,&HA000,16,TRUE)
			Dump(buf,16)
			fe->FT_SendCommands()

			MBC_RegisterWrite(fe, &HA001, &H00) 'ROM BANK LOW
			MBC_RegisterWrite(fe, &HA000, &H00) ' DATA
			MBC_RegisterWrite(fe, &HA001, &H01) 'ROM BANK HIGH
			MBC_RegisterWrite(fe, &HA000, &H00) ' DATA

			fe->ROMEnable(FALSE)
			FT232H_ReadEPROM(fe,buf,&H0100,128,FALSE)
			Dump(buf,128)

			DMG_ReadCart(fe, buf, &H0100,128, FALSE)
			Dump(buf,128)
			FT232H_ReadEPROM(fe,buf,&H0100,128,FALSE)
			Dump(buf,128)
			
			fe->ROMEnable(TRUE)
			fe->FT_SendCommands()
		Else if c=104 then
			TAMA5_Init(fe)
			TAMA5_WriteSramByteWithAddress(fe,0, &HDE)
			TAMA5_WriteSramByteWithAddress(fe,1, &HAD)
			Dim i AS Long
			For i = 0 to 31
				printf("%02X ",TAMA5_ReadSramByteWithAddress(fe,&H20+i))
			Next
		Else if c=201 then
			fe->WriteEnable(TRUE)
		Else if c=202 then
			fe->WriteEnable(FALSE)
		Else if c=222 then
			fe->ROMEnable(TRUE)
			FT232H_ReadEPROM(fe,buf,&H0600,512,TRUE,TRUE)
			Dump(buf,512,&H0600)
			fe->ROMEnable(TRUE)
		Else if c=234 then
			ReadTest(fe)

		End If
		ft->flush()

		printf(ex"¥n¥n")
		
		if c<>0 Then Input "[PRESS ENTER]",c
	Loop
debug
	Sleep(-1)
End Sub


Function CheckCancel() AS BOOL
	if GetKeyState(VK_ESCAPE) And &H80 Then 
		CheckCancel=TRUE
		printf(ex"¥n>>>>>>> Cancelled by user.¥n¥n")
	Else
		CheckCancel=FALSE
	End If
End Function

Sub TestRead(fe AS *FT232H_DMGROM, buf As BytePtr)
'	fe->ROMEnable(TRUE)
	MBC_RomBankSet(fe,DMG_MBC5,1)
	DMG_ReadCart(fe,buf,DMG_ADDRESS_BANK0,DMG_BANK_SIZE*2,0)
	
	MBC_RomBankSet(fe,DMG_MBC5,2)
	DMG_ReadCart(fe,buf+DMG_BANK_SIZE*2,DMG_ADDRESS_BANKn,DMG_BANK_SIZE,DMG_ACCESS_RD_PULSE)
	
'	Dump(buf+&H100,80,DMG_ADDRESS_BANK0)
	
'	fe->ROMEnable(TRUE)
End Sub

Sub ReadTest(fe AS *FT232H_DMGROM)
	Dim buf1 As BytePtr,buf2 As BytePtr
	buf1 = calloc(DMG_BANK_SIZE*3)
	buf2 = calloc(DMG_BANK_SIZE*3)
	TestRead(fe, buf1)
	Dim i As Long
	For i=0 To 300
		printf(ex"===============READ TEST %d=================¥n", i)
		TestRead(fe, buf2)
		VerifyData(buf1, buf2, DMG_BANK_SIZE*3)
	Next
	
End Sub
'-----------------------------------------------------------------------------------------

